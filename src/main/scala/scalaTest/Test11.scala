package scalaTest

import java.util.concurrent.atomic.AtomicInteger

object Test11 {

  // ordering db 执行针对不同功能的 key
  val KEY_ORDER = new AtomicInteger(0)
  final val ORDER_KEY_PLAYER_ATTR = KEY_ORDER.incrementAndGet()
  final val ORDER_KEY_EQUIP = KEY_ORDER.incrementAndGet()
  final val ORDER_KEY_TIMES = KEY_ORDER.incrementAndGet()
  final val ORDER_KEY_MASTER_DAILY_TARGET = KEY_ORDER.incrementAndGet()
  final val ORDER_KEY_MASTER_GRADUATE_TARGET = KEY_ORDER.incrementAndGet()
  final val ORDER_KEY_TASK = KEY_ORDER.incrementAndGet()
  final val ORDER_KEY_TASK_RING = KEY_ORDER.incrementAndGet()
  final val ORDER_KEY_TASK_HELPER = KEY_ORDER.incrementAndGet()
  final val ORDER_KEY_GENERAL = KEY_ORDER.incrementAndGet()
  final val ORDER_KEY_PET = KEY_ORDER.incrementAndGet()
  final val ORDER_KEY_PET_BATTLE = KEY_ORDER.incrementAndGet()
  final val ORDER_KEY_PET_SKILL = KEY_ORDER.incrementAndGet()
  final val ORDER_KEY_PET_EXT_ATTR = KEY_ORDER.incrementAndGet()
  final val ORDER_KEY_PET_BUY = KEY_ORDER.incrementAndGet()
  final val ORDER_KEY_REBATE_DAILY_CONSUME = KEY_ORDER.incrementAndGet()
  final val ORDER_KEY_REBATE_WEEKLY_CONSUME = KEY_ORDER.incrementAndGet()
  final val ORDER_KEY_REBATE_WEEKLY_PAY = KEY_ORDER.incrementAndGet()
  final val ORDER_KEY_ACHIEVE = KEY_ORDER.incrementAndGet()
  final val ORDER_KEY_PLAYER_ACTIVITY = KEY_ORDER.incrementAndGet()
  final val ORDER_KEY_PLAYER_ACTIVITY_RECORD = KEY_ORDER.incrementAndGet()
  final val ORDER_KEY_AUCTION = KEY_ORDER.incrementAndGet()
  final val ORDER_KEY_WEALTH = KEY_ORDER.incrementAndGet()
  final val ORDER_KEY_VIP = KEY_ORDER.incrementAndGet()
  final val ORDER_KEY_SKILL = KEY_ORDER.incrementAndGet()
  final val ORDER_KEY_ITEM = KEY_ORDER.incrementAndGet()
  final val ORDER_KEY_FASHION = KEY_ORDER.incrementAndGet()
  final val ORDER_KEY_TREASURE = KEY_ORDER.incrementAndGet()
  final val ORDER_KEY_SEVEN_DAY = KEY_ORDER.incrementAndGet()
  final val ORDER_KEY_SEVEN_DAY_RW = KEY_ORDER.incrementAndGet()
  final val ORDER_KEY_DAILY_FIRST_GROUP = KEY_ORDER.incrementAndGet()
  final val ORDER_KEY_CONSECUTIVE_RECHARGE = KEY_ORDER.incrementAndGet()
  final val ORDER_KEY_CONSECUTIVE_RECHARGE_ST = KEY_ORDER.incrementAndGet()
  final val ORDER_KEY_TONG_MEMBER = KEY_ORDER.incrementAndGet()
  final val ORDER_KEY_TONG = KEY_ORDER.incrementAndGet()
  final val ORDER_KEY_WILD = KEY_ORDER.incrementAndGet()
  final val ORDER_KEY_TONG_7RW = KEY_ORDER.incrementAndGet()
  final val ORDER_KEY_TONG_7RW_ST = KEY_ORDER.incrementAndGet()
  final val ORDER_KEY_CAREER_BATTLE = KEY_ORDER.incrementAndGet()
  final val ORDER_KEY_MAIL_FETCH = KEY_ORDER.incrementAndGet()
  final val ORDER_KEY_TITLE = KEY_ORDER.incrementAndGet()
  final val ORDER_KEY_MONEY_POT = KEY_ORDER.incrementAndGet()
  final val ORDER_KEY_RIDE_EQUIP = KEY_ORDER.incrementAndGet()
  final val ORDER_KEY_HONOR = KEY_ORDER.incrementAndGet()
  final val ORDER_KEY_EQ_STAR_REBATE = KEY_ORDER.incrementAndGet()
  final val ORDER_KEY_PET_STAR_REBATE = KEY_ORDER.incrementAndGet()
  final val ORDER_KEY_SOUL_STAR_REBATE = KEY_ORDER.incrementAndGet()
  final val ORDER_KEY_RIDE_STAR_REBATE = KEY_ORDER.incrementAndGet()
  final val ORDER_KEY_FOOTPRINT_REBATE = KEY_ORDER.incrementAndGet()
  final val ORDER_KEY_PARTNER_TASK = KEY_ORDER.incrementAndGet()
  final val ORDER_KEY_PARTNER_TASK_CONTRIBUTE = KEY_ORDER.incrementAndGet()
  final val ORDER_KEY_CLOUD_SHOP_BET = KEY_ORDER.incrementAndGet()
  final val ORDER_KEY_CLOUD_SHOP_BUY = KEY_ORDER.incrementAndGet()
  final val ORDER_KEY_CROSS_UNLOCK = KEY_ORDER.incrementAndGet()
  final val ORDER_KEY_CROSS_UNLOCK_PLAYER = KEY_ORDER.incrementAndGet()
  final val ORDER_KEY_RESOURCE_INST = KEY_ORDER.incrementAndGet()
  final val ORDER_KEY_INSTANCE_RECORD = KEY_ORDER.incrementAndGet()
  final val ORDER_KEY_GLAMOUR = KEY_ORDER.incrementAndGet()
  final val ORDER_KEY_PET_LAW = KEY_ORDER.incrementAndGet()
  final val ORDER_KEY_PET_LAW_ATTR = KEY_ORDER.incrementAndGet()
  final val ORDER_KEY_PET_CHOU = KEY_ORDER.incrementAndGet()
  final val ORDER_KEY_FRIENDLY = KEY_ORDER.incrementAndGet()
  final val ORDER_KEY_PAY = KEY_ORDER.incrementAndGet()
  final val ORDER_KEY_LOGIN = KEY_ORDER.incrementAndGet()
  final val ORDER_KEY_ORIGIN_LEVEL_UP = KEY_ORDER.incrementAndGet()
  final val ORDER_KEY_ORIGIN_LEGEND_UP = KEY_ORDER.incrementAndGet()
  final val ORDER_KEY_ORIGIN_EPIC_UP = KEY_ORDER.incrementAndGet()
  final val ORDER_KEY_ORIGIN_BINGYUN_UP = KEY_ORDER.incrementAndGet()
  final val ORDER_KEY_TB_PLAYER = KEY_ORDER.incrementAndGet()
  final val ORDER_KEY_TB_TONG = KEY_ORDER.incrementAndGet()
  final val ORDER_KEY_MONEY_TREE = KEY_ORDER.incrementAndGet()
  final val ORDER_KEY_PLAYER_NEWBIE = KEY_ORDER.incrementAndGet()
  final val ORDER_KEY_CUMULATIVE_DAY = KEY_ORDER.incrementAndGet()
  final val ORDER_KEY_CUMULATIVE_PRICE = KEY_ORDER.incrementAndGet()
  final val ORDER_KEY_CUMULATIVE_ITEM = KEY_ORDER.incrementAndGet()
  final val ORDER_KEY_CUMULATIVE_GLOBAL = KEY_ORDER.incrementAndGet()
  final val ORDER_KEY_BUFF = KEY_ORDER.incrementAndGet()
  final val ORDER_KEY_FREE_BUYING = KEY_ORDER.incrementAndGet()
  final val ORDER_KEY_FEST_BOSS = KEY_ORDER.incrementAndGet()
  final val ORDER_KEY_WISHING_PAVILION = KEY_ORDER.incrementAndGet()
  final val ORDER_KEY_FEST_QUEST = KEY_ORDER.incrementAndGet()
  final val ORDER_KEY_PLAYER_SPAR = KEY_ORDER.incrementAndGet()
  final val ORDER_KEY_BOUNTY_DAILY = KEY_ORDER.incrementAndGet()
  final val ORDER_KEY_BOUNTY_WEEKLY = KEY_ORDER.incrementAndGet()
  final val ORDER_KEY_BOUNTY = KEY_ORDER.incrementAndGet()
  final val ORDER_KEY_BOUNTY_PLAYER = KEY_ORDER.incrementAndGet()

  def main(args: Array[String]): Unit = {
    println(ORDER_KEY_PLAYER_ATTR)
    println(ORDER_KEY_INSTANCE_RECORD)
    println(ORDER_KEY_BOUNTY_WEEKLY)
    println(ORDER_KEY_EQUIP)
    println(System.currentTimeMillis())
    val longa = "what the "

    val map1 = Map(1 -> 2, 3 -> 4)
    val map2 = map1 + (4 -> 6)
    println("ads" + map2.+(6->"hhh"))
    val item = map1.get(4) match {
      case Some(value) => value
      case None => 555
    }
    println(item)
    val a = Array(1, 2)
    val b = Array(1, 2, 3)
    println(a.sameElements(b))

    1 match {
      case 2 => println(1)
      case x: Int => println(x)
    }
  }
}
